name: quality

on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CLUSTER: k8s-cash-track
  KUBECTL_BIN: ${{ vars.KUBECTL_BIN_URL }}

jobs:
  common:
    name: common
    runs-on: [self-hosted, Linux, x64]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Install kubectl
        run: |
          curl -LO ${{ env.KUBECTL_BIN }}
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl

      - name: Configure kubectl
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ env.CLUSTER }}

      - name: Dry run
        run: |
          kubectl apply --dry-run=server -R -f common/
          kubectl apply --dry-run=server -f services/prometheus/
          kubectl apply --dry-run=server -f services/node-exporter/
          kubectl apply --dry-run=server -f services/grafana/
          kubectl apply --dry-run=server -f services/grafana-loki/
          kubectl apply --dry-run=server -f services/grafana-tempo/
          kubectl apply --dry-run=server -f services/promtail/
          kubectl apply --dry-run=server -f services/mysql-exporter/
          kubectl apply --dry-run=server -f services/alertmanager/
  api:
    name: api
    runs-on: [self-hosted, Linux, x64]
    env:
      REPO: cashtrack/api
      GIT_REPO: https://github.com/cash-track/api
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Install kubectl
        run: |
          curl -LO ${{ env.KUBECTL_BIN }}
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl

      - name: Configure kubectl
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ env.CLUSTER }}

      - name: Fetch latest tag
        id: latest_tag
        run: echo "tag=$(git ls-remote --refs --sort='version:refname' --tags ${{ env.GIT_REPO }} | cut -d/ -f3- | tail -n1 | sed -e "s/^v//")" >> $GITHUB_OUTPUT

      - name: Update deployment
        env:
          IMAGE: ${{ env.REPO }}:${{ steps.latest_tag.outputs.tag }}
        run: sed -i 's|${{ env.REPO }}:latest|'${IMAGE}'|' $GITHUB_WORKSPACE/services/api/deployment.yml

      - name: Dry run
        run: kubectl apply --dry-run=server -f services/api/
  gateway:
    name: gateway
    runs-on: [self-hosted, Linux, x64]
    env:
      REPO: cashtrack/gateway
      GIT_REPO: https://github.com/cash-track/gateway
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Install kubectl
        run: |
          curl -LO ${{ env.KUBECTL_BIN }}
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl

      - name: Configure kubectl
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ env.CLUSTER }}

      - name: Fetch latest tag
        id: latest_tag
        run: echo "tag=$(git ls-remote --refs --sort='version:refname' --tags ${{ env.GIT_REPO }} | cut -d/ -f3- | tail -n1 | sed -e "s/^v//")" >> $GITHUB_OUTPUT

      - name: Update deployment
        env:
          IMAGE: ${{ env.REPO }}:${{ steps.latest_tag.outputs.tag }}
        run: sed -i 's|${{ env.REPO }}:latest|'${IMAGE}'|' $GITHUB_WORKSPACE/services/gateway/deployment.yml

      - name: Dry run
        run: kubectl apply --dry-run=server -f services/gateway/

  mysql:
    name: mysql
    runs-on: [self-hosted, Linux, x64]
    env:
      REPO: cashtrack/mysql
      GIT_REPO: https://github.com/cash-track/mysql
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Install kubectl
        run: |
          curl -LO ${{ env.KUBECTL_BIN }}
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl

      - name: Configure kubectl
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ env.CLUSTER }}

      - name: Fetch latest tag
        id: latest_tag
        run: echo "tag=$(git ls-remote --refs --sort='version:refname' --tags ${{ env.GIT_REPO }} | cut -d/ -f3- | tail -n1 | sed -e "s/^v//")" >> $GITHUB_OUTPUT

      - name: Update deployment
        env:
          IMAGE: ${{ env.REPO }}:${{ steps.latest_tag.outputs.tag }}
        run: sed -i 's|${{ env.REPO }}:latest|'${IMAGE}'|' $GITHUB_WORKSPACE/services/mysql/statefulset.yml

      - name: Dry run
        run: kubectl apply --dry-run=server -f services/mysql/

  website:
    name: website
    runs-on: [self-hosted, Linux, x64]
    env:
      REPO: cashtrack/website
      GIT_REPO: https://github.com/cash-track/website
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Install kubectl
        run: |
          curl -LO ${{ env.KUBECTL_BIN }}
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl

      - name: Configure kubectl
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ env.CLUSTER }}

      - name: Fetch latest tag
        id: latest_tag
        run: echo "tag=$(git ls-remote --refs --sort='version:refname' --tags ${{ env.GIT_REPO }} | cut -d/ -f3- | tail -n1 | sed -e "s/^v//")" >> $GITHUB_OUTPUT

      - name: Update deployment
        env:
          IMAGE: ${{ env.REPO }}:${{ steps.latest_tag.outputs.tag }}
        run: sed -i 's|${{ env.REPO }}:latest|'${IMAGE}'|' $GITHUB_WORKSPACE/services/website/deployment.yml

      - name: Dry run
        run: kubectl apply --dry-run=server -f services/website/

  frontend:
    name: frontend
    runs-on: [self-hosted, Linux, x64]
    env:
      REPO: cashtrack/frontend
      GIT_REPO: https://github.com/cash-track/frontend
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Install kubectl
        run: |
          curl -LO ${{ env.KUBECTL_BIN }}
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl

      - name: Configure kubectl
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ env.CLUSTER }}

      - name: Fetch latest tag
        id: latest_tag
        run: echo "tag=$(git ls-remote --refs --sort='version:refname' --tags ${{ env.GIT_REPO }} | cut -d/ -f3- | tail -n1 | sed -e "s/^v//")" >> $GITHUB_OUTPUT

      - name: Update deployment
        env:
          IMAGE: ${{ env.REPO }}:${{ steps.latest_tag.outputs.tag }}
        run: sed -i 's|${{ env.REPO }}:latest|'${IMAGE}'|' $GITHUB_WORKSPACE/services/frontend/deployment.yml

      - name: Dry run
        run: kubectl apply --dry-run=server -f services/frontend/

  mysql-backup:
    name: mysql-backup
    runs-on: [self-hosted, Linux, x64]
    env:
      REPO: cashtrack/mysql-backup
      GIT_REPO: https://github.com/cash-track/mysql-backup
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Install kubectl
        run: |
          curl -LO ${{ env.KUBECTL_BIN }}
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl

      - name: Configure kubectl
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ env.CLUSTER }}

      - name: Fetch latest tag
        id: latest_tag
        run: echo "tag=$(git ls-remote --refs --sort='version:refname' --tags ${{ env.GIT_REPO }} | cut -d/ -f3- | tail -n1 | sed -e "s/^v//")" >> $GITHUB_OUTPUT

      - name: Update deployment
        env:
          IMAGE: ${{ env.REPO }}:${{ steps.latest_tag.outputs.tag }}
        run: sed -i 's|${{ env.REPO }}:latest|'${IMAGE}'|' $GITHUB_WORKSPACE/services/mysql-backup/deployment.yml

      - name: Dry run
        run: kubectl apply --dry-run=server -f services/mysql-backup/

  redis:
    name: redis
    runs-on: [self-hosted, Linux, x64]
    env:
      REPO: cashtrack/redis
      GIT_REPO: https://github.com/cash-track/redis
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Install kubectl
        run: |
          curl -LO ${{ env.KUBECTL_BIN }}
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl

      - name: Configure kubectl
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ env.CLUSTER }}

      - name: Fetch latest tag
        id: latest_tag
        run: echo "tag=$(git ls-remote --refs --sort='version:refname' --tags ${{ env.GIT_REPO }} | cut -d/ -f3- | tail -n1 | sed -e "s/^v//")" >> $GITHUB_OUTPUT

      - name: Update deployment
        env:
          IMAGE: ${{ env.REPO }}:${{ steps.latest_tag.outputs.tag }}
        run: sed -i 's|${{ env.REPO }}:latest|'${IMAGE}'|' $GITHUB_WORKSPACE/services/redis/statefulset.yml

      - name: Dry run
        run: kubectl apply --dry-run=server -f services/redis/
